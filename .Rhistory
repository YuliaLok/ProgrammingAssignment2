matrix(12,3,byrow=TRUE, dim=NULL)
matrix(12,3,byrow=FALSE, dim=NULL)
matrix(12,3,byrow=FALSE, dim=2)
x<-1
print.srcfile(x)
x<-1
print(x)
x
x
msg hello
msg<-hello
x<-1:6
complex(x)
as.character(x,10)
as.character
class()
x<-1:6
class(x)
clas(x)
class(x)
sa.logical
as.logical(x)
install.packages(swirl)
"swirl"
install.packages("swirl")
packageVersion("swirl")
library(swirl)
swirl()
swirl()
Sys.Date
Sys.Date()
mean(c(2,4,5))
boring_function()
boring_function<-function(x)
print(x)
}
boring_function<-function(x)
{x}
boring_function(1)
submit()
boring_function <-function(x)
y=x}
boring_function<-function(x)
{y=x}
boring_function(1)
submit()
boring_function <- function(x){x}
boring_function(1)
submit()
boring_function(x)
boring_function<-function(x) {}
x
boring_function<-function(x) {x}
submit()
boring_function("My first function!")
boring_function
my_mean<-mean(x){}
mean()
mean(x)
my_mean<-mean(x)
my_mean <- function(x) {(sum(x[1:]))/(length(x[1:n])}
mean()
mean(x)
my_mean<- function(x){sum(x)/length(x)}
my_mean(1,2,3)
submit()
my_mean <-function (c(1,2,3)){sum(c)/length(c)}
my_mean <-function(c){sum(c)length(c)}
my_mean <- function (c(1,2,3)) {sum(c, na.rm=TRUE)/length(c)}
my_mean <-function(x) {}
my_mean <-function(x){a=sum(x) b=length(x) a/b}
View(my_mean)
my_mean <-function(x) {}
view(mean())
my_mean<-function(x, 1:6) {sum(x, 1:6)/length(x)}
submit()
my_mean<-function(x,6) {sum(x)/length(x)}
my_mean <0function(x){sum(x)/length(x)}
my_mean<-function(c[,]){ }
my_mean<-function(my_vector){}
my_vector<-1:3
my_mean<-function(my_vector){sum(my_vector)/length(my_vector)}
my_mean(my_vector)
submit()
my_mean<-function(x){sum(x[1:3]/length(x))}
my_mean(3)
submit()
my_vector<-c(1,2,3)
my_mean<-function(){sum(,[x])}
my_vector<-c[1,2,3]
my_vector<-c(1,2,3)
my_mean<-function(c){sum(c)/length(c)}
my_mean(my_vector)
submit()
my_vector<-1:3
my_mean<-function(my_vector){sum(my_vector)/length(my_vector)}
my_mean(my_vector)
submit()
my_mean<-function(my_vector){my_vector<-1,2,3 sum(my_vector)/length(my_vector)}
my_mean<-function(x,y,z){(x+y+z)/3}
my_mean(1,2,3)
submit()
main(0)
main()
main()
Selection 2
bye(0)
bye
intall.packages("swirl")
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
load("~/.RData")
library(swirl)
install_from_swirl("R.Programming")
swirl()
v(0.5,55,-10,6)
v<-c(0.5,55,-10,6)
?c
c(0.5,55,-10,6)
info()
swirl()
library(swirl)
swirl()
colnames(my_data)<-cnames
skip()
library(swirl)
ls()
swirl()
my_vector<-1:20
my_vector
dim(my_vector)
length()
length(my_vector)
dim(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
matrix()
?matrix()
swirl()
?matrix()
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix, my_matrix2)
patient<-("Bill", "Gina", "Kelly", "Sean")
patients<- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp","rating", "test")
colnames(my_data, cnames)
colnames <- cnames
colnames(my_data)<-cnames
my_data
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class, simplify=TRUE)
class(csl_vect)
class(cls_vect)
sum(flag&orange, nar.rm=TRUE)
sum(flags$orange)
flag_colours<-flags[, 11:17]
flag_colors<-flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum, na.rm=FALSE)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes<- flags[,19:23]
range(flag_shapes)
lapply(flag_shapes,range, na.rm=FALSE)
lapply(flag_shapes,range)
sapply(flag_shapes, range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
length_values<-sapply(unique_vals,length)
sapply(unique_vals, length)
lapply(flags, unique)
sapply(flags, unique)
ok
>
lapply(unique_vals, function(elem)elem[2]))
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags,class, character(1))
?tapply
table(glags$landmass)
table(flags$lanmass)
table(flags$landmass)
table(flags$animate)
tapply(lags$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
info()
bye()
View(viewinfo)
View(shape_mat)
View(ok)
View(my_vector)
View(my_matrix)
data(iris)
library(datasets)
data(iris)
data("iris")
library(dataset)
library(datasets)
data("iris")
view("iris")
?iris
View(iris)
mean(virginica, 101:150)
mean("iris",iris$Sepal.Length[101;150] )
mean("iris",iris$Sepal.Length[101:150] )
?mean
apply("iris", iris$Sepal.Length, mean)
dim("iris")
getwd()
ls()
class("iris")
head("iris")
table("iris")
?table()
read.csv("iris")
View(iris)
iris
read.csv(iris)
read.csv(iris, hesder=TRUE, sep="")
read.csv(iris, header=TRUE, sep="")
?data.frame
> mean("iris,iris$Sepal.Length[101:150] )
> mean(iris, iris$Sepal.Length[101:150] )
apply (iris,iris$Sepal.Length[101:150], mean)
apply(iris,iris$Sepal.Length[101:150], mean)
tapply(iris, iris$Sepal.Length, iris$Species=virginica, mean)
apply(iris, iris$Sepal.Length, mean)
mean(iris$Sepal.Length[101:150])
colMeans(iris)
colmeans(iris)
apply(iris,[,1:4],1,mean)
colMeans(iris,na.rm=FALSE, dims=1l)
colMeans(iris)
apply(iris[,1:4],1,mean)
apply(iris[101:150, 1], 1, mean)
apply(iris[101-105, 1], mean)
tapply(iris, iris$Sepal.Length, iris$Species=virginica)
tapply(iris, iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species=virginica, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
?absolute.dif
?diff()
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
mean(mean(mtcars[mtcars$cyl == "4",]$hp)-mean(mtcars[mtcars$cyl == "4",]$hp)
>
>
mean(mean(mtcars[mtcars$cyl == "4",]$hp)-mean(mtcars[mtcars$cyl == "4",]$hp)
>
>
mean(mtcars[mtcars$cyl == "4",]$hp)-mean(mtcars[mtcars$cyl == "4",]$hp)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
a <- mean(mtcars[mtcars$cyl =="4",]hp)
a <- mean(mtcars[mtcars$cyl =="4",]$hp))
a<- mean(mtcars[mtcars$cyl=="4",2]))
mean(mtcars[mtcars$cyl==4,]$hp))
mean(mtcars[mtcars$cyl==4,],mtcars$hp))
mean(mtcars[mtcars$cyl==4,],mtcars$hp)
View(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls()
debug
>
>
setwd("~/Desktop/COURSERA/R Programming/Assignments/ProgrammingAssignment2/ProgrammingAssignment2")
>
dir()
dir()
